{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCEA,IAAM,EAAY,SAAS,aAAa,CAAC,eACnC,EAAY,SAAS,aAAa,CAAC,eACnC,EAAe,SAAS,aAAa,CAAC,kBACtC,EAAe,SAAS,aAAa,CAAC,kBAE5C,EAAU,gBAAgB,CAAC,QAAS,WAClC,IAAM,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAQ,EAAG,EAAM,gBAAgB,CAAC,OAElC,EAAS,CAAI,CAAC,EAAE,CAAC,SAAS,CAAC,CAAA,GAEjC,EAAK,IAAI,CAAC,GAEN,EAAK,MAAM,EAAI,IACjB,CAAA,EAAU,QAAQ,CAAG,CAAA,CADvB,EAIA,EAAK,OAAO,CAAC,SAAC,CAAd,EAAsB,OAAA,EAAM,qBAAqB,CAAC,aAAc,E,GAE5D,EAAK,MAAM,CAAG,GAChB,CAAA,EAAU,QAAQ,CAAG,CAAA,CADvB,CAGF,GAEA,EAAU,gBAAgB,CAAC,QAAS,WAElC,IAAM,EAAQ,EAAG,AADH,SAAS,aAAa,CAAC,UACd,gBAAgB,CAAC,OAExC,CAAI,CAAC,EAAE,CAAC,MAAM,GACd,EAAK,KAAK,GAEN,EAAK,MAAM,EAAI,GACjB,CAAA,EAAU,QAAQ,CAAG,CAAA,CADvB,EAII,EAAK,MAAM,CAAG,IAChB,CAAA,EAAU,QAAQ,CAAG,CAAA,CADvB,CAGF,GAEA,EAAa,gBAAgB,CAAC,QAAS,WAErC,IAAM,EAAQ,EAAG,AADH,SAAS,aAAa,CAAC,UACd,gBAAgB,CAAC,OAExC,EAAK,OAAO,CAAC,SAAC,CAAd,EACE,IAAM,EAAS,EAAG,EAAO,gBAAgB,CAAC,OACpC,EAAU,CAAK,CAAC,EAAE,CAAC,SAAS,GAElC,EAAO,MAAM,CAAC,GACd,EAAM,IAAI,CAAC,GAEP,EAAM,MAAM,EAAI,IAClB,CAAA,EAAa,QAAQ,CAAG,CAAA,CAD1B,CAGF,GAEwB,CAAI,CAAC,EAAE,CAAC,gBAAgB,CAAC,MAAM,MAAM,CAEvC,GACpB,CAAA,EAAa,QAAQ,CAAG,CAAA,CAD1B,CAGF,GAEA,EAAa,gBAAgB,CAAC,QAAS,WAErC,IAAM,EAAQ,EAAG,AADH,SAAS,aAAa,CAAC,UACd,gBAAgB,CAAC,OAExC,EAAK,OAAO,CAAC,SAAC,CAAd,EACE,IAAM,EAAS,EAAG,EAAI,gBAAgB,CAAC,OAEvC,CAAK,CAAC,EAAE,CAAC,MAAM,GACf,EAAM,KAAK,GAEP,EAAM,MAAM,EAAI,GAClB,CAAA,EAAa,QAAQ,CAAG,CAAA,CAD1B,CAGF,GAEwB,CAAI,CAAC,EAAE,CAAC,gBAAgB,CAAC,MAAM,MAAM,CAEvC,IACpB,CAAA,EAAa,QAAQ,CAAG,CAAA,CAD1B,CAGF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar appendRow = document.querySelector(\".append-row\");\nvar removeRow = document.querySelector(\".remove-row\");\nvar appendColumn = document.querySelector(\".append-column\");\nvar removeColumn = document.querySelector(\".remove-column\");\nappendRow.addEventListener(\"click\", function() {\n    var field = document.querySelector(\"tbody\");\n    var rows = _to_consumable_array(field.querySelectorAll(\"tr\"));\n    var newRow = rows[0].cloneNode(true);\n    rows.push(newRow);\n    if (rows.length >= 10) appendRow.disabled = true;\n    rows.forEach(function(row) {\n        return field.insertAdjacentElement(\"afterbegin\", row);\n    });\n    if (rows.length > 2) removeRow.disabled = false;\n});\nremoveRow.addEventListener(\"click\", function() {\n    var field = document.querySelector(\".field\");\n    var rows = _to_consumable_array(field.querySelectorAll(\"tr\"));\n    rows[0].remove();\n    rows.shift();\n    if (rows.length <= 2) removeRow.disabled = true;\n    if (rows.length < 10) appendRow.disabled = false;\n});\nappendColumn.addEventListener(\"click\", function() {\n    var field = document.querySelector(\".field\");\n    var rows = _to_consumable_array(field.querySelectorAll(\"tr\"));\n    rows.forEach(function(column) {\n        var cells = _to_consumable_array(column.querySelectorAll(\"td\"));\n        var newCell = cells[0].cloneNode();\n        column.append(newCell);\n        cells.push(newCell);\n        if (cells.length >= 10) appendColumn.disabled = true;\n    });\n    var quantityColumns = rows[0].querySelectorAll(\"td\").length;\n    if (quantityColumns > 2) removeColumn.disabled = false;\n});\nremoveColumn.addEventListener(\"click\", function() {\n    var field = document.querySelector(\".field\");\n    var rows = _to_consumable_array(field.querySelectorAll(\"tr\"));\n    rows.forEach(function(row) {\n        var cells = _to_consumable_array(row.querySelectorAll(\"td\"));\n        cells[0].remove();\n        cells.shift();\n        if (cells.length <= 2) removeColumn.disabled = true;\n    });\n    var quantityColumns = rows[0].querySelectorAll(\"td\").length;\n    if (quantityColumns < 10) appendColumn.disabled = false;\n});\n\n//# sourceMappingURL=index.c9dad1b0.js.map\n","'use strict';\n\nconst appendRow = document.querySelector('.append-row');\nconst removeRow = document.querySelector('.remove-row');\nconst appendColumn = document.querySelector('.append-column');\nconst removeColumn = document.querySelector('.remove-column');\n\nappendRow.addEventListener('click', () => {\n  const field = document.querySelector('tbody');\n  const rows = [...field.querySelectorAll('tr')];\n\n  const newRow = rows[0].cloneNode(true);\n\n  rows.push(newRow);\n\n  if (rows.length >= 10) {\n    appendRow.disabled = true;\n  }\n\n  rows.forEach((row) => field.insertAdjacentElement('afterbegin', row));\n\n  if (rows.length > 2) {\n    removeRow.disabled = false;\n  }\n});\n\nremoveRow.addEventListener('click', () => {\n  const field = document.querySelector('.field');\n  const rows = [...field.querySelectorAll('tr')];\n\n  rows[0].remove();\n  rows.shift();\n\n  if (rows.length <= 2) {\n    removeRow.disabled = true;\n  }\n\n  if (rows.length < 10) {\n    appendRow.disabled = false;\n  }\n});\n\nappendColumn.addEventListener('click', () => {\n  const field = document.querySelector('.field');\n  const rows = [...field.querySelectorAll('tr')];\n\n  rows.forEach((column) => {\n    const cells = [...column.querySelectorAll('td')];\n    const newCell = cells[0].cloneNode();\n\n    column.append(newCell);\n    cells.push(newCell);\n\n    if (cells.length >= 10) {\n      appendColumn.disabled = true;\n    }\n  });\n\n  const quantityColumns = rows[0].querySelectorAll('td').length;\n\n  if (quantityColumns > 2) {\n    removeColumn.disabled = false;\n  }\n});\n\nremoveColumn.addEventListener('click', () => {\n  const field = document.querySelector('.field');\n  const rows = [...field.querySelectorAll('tr')];\n\n  rows.forEach((row) => {\n    const cells = [...row.querySelectorAll('td')];\n\n    cells[0].remove();\n    cells.shift();\n\n    if (cells.length <= 2) {\n      removeColumn.disabled = true;\n    }\n  });\n\n  const quantityColumns = rows[0].querySelectorAll('td').length;\n\n  if (quantityColumns < 10) {\n    appendColumn.disabled = false;\n  }\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","appendRow","document","querySelector","removeRow","appendColumn","removeColumn","addEventListener","field","rows","querySelectorAll","newRow","cloneNode","push","disabled","forEach","row","insertAdjacentElement","remove","shift","column","cells","newCell","append"],"version":3,"file":"index.c9dad1b0.js.map"}